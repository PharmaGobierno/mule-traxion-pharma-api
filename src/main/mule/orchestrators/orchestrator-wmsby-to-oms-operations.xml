<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="orchestrator-kafka-operations-modifica-remision" doc:id="c87e7afc-a10e-4607-b048-f52ac42dbeb3" >
		<ee:transform doc:name="Transform Message" doc:id="b1a7f6dd-741d-4189-9792-531a36ccb283" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
 {
  "metadata": {
    "transaction_id": uuid(),
    "source_system": "WMS_BY",
    "transaction_type": "REMISSION_MODIFY",
    "timestamp": now()
  },
  "payload": payload
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="abcced48-30a4-4a08-9faa-89171207340d" message="#[payload]"/>
		<flow-ref doc:name="client-kafka-publish-message-modify-remision" doc:id="de31b519-167a-49ea-a5f1-e048345a2b2e" name="client-kafka-publish-message-modify-remision"/>
		<ee:transform doc:name="Transform Message" doc:id="ca8f70ad-ea73-435a-9516-7bdda33f175b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
    "traxion_response": {
        "response": {
            "message": "successful",
            "data": {
              "transactionId": correlationId
            }
        },
        "completedSuccessfully": true
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-kafka-operations-create-remision" doc:id="d6790733-fce3-4bd3-be89-92fbad80e19f" >
		<ee:transform doc:name="Transform Message" doc:id="44ef35e3-004c-475a-9d8b-88873e236204" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
 {
  "metadata": {
    "transaction_id": uuid(),
    "source_system": "WMS_BY",
    "transaction_type": "REMISSION_CREATION",
    "timestamp": now()
  },
  "payload": payload.payload
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="bc8fd142-1101-49a2-a6c7-6f3136cfeb9e" message="#[payload]"/>
		<flow-ref doc:name="client-kafka-publish-message-create-remision" doc:id="a6e92960-9ec1-42c5-9cbc-a83e0e555d4c" name="client-kafka-publish-message-create-remision" />
		<ee:transform doc:name="Transform Message1" doc:id="522590b5-33eb-4202-a8c9-fd8ad18ccffb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
    "traxion_response": {
        "response": {
            "message": "successful",
            "data": {
              "transactionId": correlationId
            }
        },
        "completedSuccessfully": true
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-kafka-operations-events-remision" doc:id="b14afaf0-7e89-4981-abc7-7e2703e40da6" >
		<ee:transform doc:name="Transform Message" doc:id="a2b31c28-2b3f-4660-8aa8-421962cd5e68" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="status" ><![CDATA[%dw 2.0
output application/json
fun traductorstatus(aString)
= aString match {
  case "in_tranti" -> "EN_ROUTE_TO_DROPOFF"
  case "arrived" -> "TRANSPORT_ARRIVED"
  else -> "UNKNOWN"
}
---
traductorstatus(payload.status)


]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Transform Message2" doc:id="df6b5695-b4e1-45bf-a10f-21f8480816f3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "payload":payload,
    "origin_timestamp" : now() as Number {unit: "milliseconds"},
    "event": "ARTICLE_INVENTORY",  // UPDATE, CANCEL
    "publish_at": now() as Number {unit: "milliseconds"},
    "project": "PISA", //attributo de filtro obligatorio
    "company": "PISA", //attributo de filtro obligatorio
    "version": "1" //attributo de filtro obligatorio
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="c00d1b9e-3105-4eae-9165-acdcf48b59c9" message="#[payload]"/>
		<flow-ref doc:name="client-pub-sub-order-events-by-tms" doc:id="1363954a-2430-4842-9266-fb0a6a697a4a" name="client-pub-sub-order-events-by-tms" />
		<ee:transform doc:name="Transform Message1" doc:id="4a9b8fcd-400e-495a-a06f-0f490e462e04" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
    "traxion_response": {
        "response": {
            "message": "successful",
            "data": {
              "transactionId": correlationId
            }
        },
        "completedSuccessfully": true
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-kafka-wmsby-by-to-oms-operations-article-inventory" doc:id="0143fdac-1d5f-4194-a155-63feb105dd5c" >
		<logger level="INFO" doc:name="Logger" doc:id="654a9bdb-f73c-4eaf-80c3-b2aa959e9756" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="4ccc5120-49d3-4a8c-b907-3e69229126f3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.UC_TRX_INVENTORY_SNAPSHOT.inventory_snapshot
    groupBy ((order, index) -> order.PRODUCT_NUMBER)
    pluck ((value, key, index) -> value)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="e3e163eb-6d46-4fb0-acb2-d4639d7bc785" collection="#[payload]">
			<ee:transform doc:name="Transform Message" doc:id="945b300d-36eb-4697-8130-c3440ac32767">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "payload": {
        "process_id": correlationId,
        "sku": payload.PRODUCT_NUMBER[0],
        "brand": payload.BRAND[0] default "",
        "description": payload.DESCRIPTION[0] default "", // Optional[str] cuando te la manden nos las mandas XD
        "lotes": payload map(item) -> {
            "id": item.LOT_NUMBER,
            "expiration_date": item.EXPIRATION_DATE,
            "quantity": item.QUANTITY,
            "origin_warehouse": item.ORIGIN_WAREHOUSE
         }
    },
	"publish_at": now() as Number {unit: "milliseconds"},
    "origin_timestamp" : now() as Number {unit: "milliseconds"},// fecha de creacion del snapshot en WMS
    "origin_platform": "WMS",
    "project": "PISA", //attributo de filtro obligatorio
    "company": "PISA", //attributo de filtro obligatorio
    "version": "1", //attributo de filtro obligatorio
    "action_type": "VIEW" // REQUEST
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="3870fc6f-aec3-41cb-ba25-1c2931db8ba2" message="#[payload]" />
			<flow-ref doc:name="client-pub-sub-article-inventory" doc:id="4eac4084-c45d-4638-8261-b2fd4fb393a9" name="client-pub-sub-article-inventory" />
		</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="3607c212-1ef2-4fdf-bf17-beaa77b95bf2" message="#[payload]" />
		<ee:transform doc:name="Transform Message1" doc:id="8e883f85-6fa8-4d35-a131-8117c03b4bc5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
    "traxion_response": {
        "response": {
            "message": "successful",
            "data": {
              "transactionId": correlationId
            }
        },
        "completedSuccessfully": true
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-kafka-wmsby-to-oms-operations-order-events" doc:id="e7c36b17-8207-420a-b4e5-5d3472fe1995" >
		<logger level="INFO" doc:name="Logger1" doc:id="14a80192-f1c7-4837-86e6-831a45a04be6" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="992b057a-832c-41f8-ad5b-e2e1bf077b3a" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="status" ><![CDATA[%dw 2.0
output application/json

---
payload.order_status_change.STATUS


]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Transform Message2" doc:id="e98202b8-265a-4544-a035-b89146914793">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "payload": {
        "tracking_id": payload.order_status_change.ORGREF,
        "event": payload.order_status_change.STATUS, //  [DISPATCH, ...]   
        "event_timestamp": payload.order_status_change.EVENT_TIMESTAMP as DateTime as Number {unit: "milliseconds"} ,   // momento en el que ocurre (utc, no reginal) , timestamp fisico real
        "event_note": null, // TBD default null Optional[dict]
        "author": {
            "id": "",   // obligatorio
            "name": payload.order_status_change.USER,       
            "type": "",  // hay manera que lo envie?        
            "email": ""  // si lo tienen lo envian, sino null
        },
    },
    "event": payload.order_status_change.STATUS, //attributo de filtro obligatorio
    "publish_at":now() as Number {unit: "milliseconds"},
    "project": "PISA", //attributo de filtro obligatorio
    "company": "PISA", //attributo de filtro obligatorio
    "origin_platform" : "WMS", // [TMS, WMS, ...]
    "origin_timestamp" : now() as Number {unit: "milliseconds"},
    "order_type": "REMISSION_PISA", //attributo de filtro obligatorio
    "context": { //Optional[dict]
        "lotes": payload.order_status_change.order_details map(item)->
            { 
                "item_id": item.PRODUCT_NUMBER, // sku
                "lote_id": item.LOT_NUMBER,
                "expiration_date": item.EXPIRATION_DATE,
                "origin_warehouse": payload.order_status_change.ORIGIN_WAREHOUSE,
                "accepted_quantity": item.QUANTITY
            }
    },
    "version": "1" //attributo de filtro obligatorio
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7ef0295a-80c0-4257-8a5f-06f51574628e" message="#[payload]" />
		<flow-ref doc:name="client-pub-sub-order-events" doc:id="ae0a68b7-b387-4fe9-9548-9f027383e0c6" name="client-pub-sub-order-events" />
		<ee:transform doc:name="Transform Message1" doc:id="a6e53194-f0d2-43da-bacd-fc0ac386df19" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    "traxion_response": {
        "response": {
            "message": "successful",
            "data": {
              "transactionId": correlationId
            }
        },
        "completedSuccessfully": true
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>

</mule>
