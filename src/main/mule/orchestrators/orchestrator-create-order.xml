<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="orchestrator-create-order-main" doc:id="581dab95-245c-49a4-aa59-328d98a8af49" >
		<flow-ref doc:name="orchestrator-create-order-convert-json-request" doc:id="caad8b06-40c9-413e-8d1c-1a8873e49e92" name="orchestrator-create-order-convert-json-request"/>
		<flow-ref doc:name="clients-process-pharma-api-call-create-order" doc:id="31ed5654-aa6e-4e9d-9acb-27dc6275310c" name="clients-process-pharma-api-call-create-order"/>
		<flow-ref doc:name="Call to orchestrator-create-order-response" doc:id="52226522-370b-4e3b-9ad9-73668705782a" name="orchestrator-create-order-response"/>
		<logger level="INFO" doc:name="Logger" doc:id="0763cca0-eb49-4093-9c13-df97c8785de5" message="RESPUESTA: #[payload]" />
	</sub-flow>
	<sub-flow name="orchestrator-create-order-convert-json-request" doc:id="c7cb6411-fade-4086-8f9b-c536c30b1dff" >
		<logger level="INFO" doc:name="Logger" doc:id="1826d098-2431-43da-b8d7-6f9ab5aaa2a4" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="65288b4b-f2fd-4468-b943-26fcf634e0d2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  "fechaViaje": payload.Envelope.Body.CrearViajeCompleto.crearviaje.FechaViaje,
  "fechaInicioPlan": payload.Envelope.Body.CrearViajeCompleto.crearviaje.FechaInicioPlan,
  "fechaArribo": payload.Envelope.Body.CrearViajeCompleto.crearviaje.FechaArribo,
  "fechaFinPlan": now()[0 to 18], ///payload.Envelope.Body.CrearViajeCompleto.crearviaje.FechaFinPlan ,
  "referencia": payload.Envelope.Body.CrearViajeCompleto.crearviaje.Referencia,
  "descripcion": payload.Envelope.Body.CrearViajeCompleto.crearviaje.Descripcion,
  "sucursal": payload.Envelope.Body.CrearViajeCompleto.crearviaje.Sucursal,
  "operacion": payload.Envelope.Body.CrearViajeCompleto.crearviaje.Operacion,
  "empresa": payload.Envelope.Body.CrearViajeCompleto.crearviaje.Empresa,
  "tipoViaje": payload.Envelope.Body.CrearViajeCompleto.crearviaje.TipoViaje,
  "refCliente": payload.Envelope.Body.CrearViajeCompleto.crearviaje.cliente.RefCliente,
  "razonSocialCliente": payload.Envelope.Body.CrearViajeCompleto.crearviaje.cliente.RazonSocial,
  "depositoSalida": payload.Envelope.Body.CrearViajeCompleto.crearviaje.depositoSalida.RefDepositoExterno,
  "depositoLlegada": payload.Envelope.Body.CrearViajeCompleto.crearviaje.depositoLlegada.RefDepositoExterno,
  "paradas": payload.Envelope.Body.CrearViajeCompleto.crearviaje.Paradas.*pParada map(parada)-> {
      "secuencia": parada.Secuencia,
      "refDocumento": parada.RefDocumento,
      "refDocumentoAdicional": parada.refDocumentoAdicional,
      "tipoParada": parada.TipoParada,
      "inicioHorarioPlanificado": parada.InicioHorarioPlanificado,
      "finHorarioPlanificado": parada.FinHorarioPlanificado,
      "refCliente": "IMSS BIENESTAR",//parada.cliente.RefCliente
      "refDomicilioExternoCliente": parada.cliente.RefDomicilioExterno,//parada.cliente.RefCliente,
      "domicilioDescripcionCliente": parada.cliente.DomicilioDescripcion,
      "items": parada.Items.*pParadaItem map(item)->
        {
          "refDocumento": item.RefDocumento,
          "refDocumentoAdicional": item.RefDocumentoAdicional,
          "descripcion": item.Descripcion,
          "cantidad": item.Cantidad,
          "volumen": item.Volumen,
          "peso": item.Peso,
          "pallets": item.Pallets,
          "productoLinea": item.ProductoLinea,
          "apilablePermitido": item.Apilable_Permitido,
          "embalaje": item.Varchar3,
          "fechaCaducidad": item.Varchar2,
          "lote": item.Varchar1
        }
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-create-order-response" doc:id="d867f347-6bec-420d-bc8c-e1c08a6de2ba" >
		<ee:transform doc:name="Transform Message" doc:id="49b1a375-3563-47bb-ae73-23ba3fe9ba82" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
{
	"traxion_response": {
	
		"completed_succesfully": "true",
		"message": {
			"description": "exitoso"
		}
	}
	}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
