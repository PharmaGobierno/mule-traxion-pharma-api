<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:process-pharma-api="http://www.mulesoft.org/schema/mule/process-pharma-api" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/process-pharma-api http://www.mulesoft.org/schema/mule/process-pharma-api/current/mule-process-pharma-api.xsd">
	<process-pharma-api:config name="Process_pharma_api_Config" doc:name="Process-pharma-api Config" doc:id="97dbdca6-0d5f-433f-b39e-b74301f5aefd" property_host="${client.process.pharma.api.https.host}" property_port="${client.process.pharma.api.https.port}" property_basePath="/api" property_protocol="HTTPS" property_responseTimeout="${client.process.pharma.api.https.response.timeout}" >
		<expiration-policy maxIdleTime="${client.process.pharma.api.https.connection.idle.timeout}" timeUnit="MILLISECONDS" />
	</process-pharma-api:config>
	<sub-flow name="clients-process-pharma-api-tms-settled" doc:id="615fda4d-10c6-4dac-a33e-5b7794ba12ae" >
		<!-- [STUDIO:"Request"]<http:request method="POST" doc:name="Request" doc:id="d3aacbc3-5062-41ca-913a-45bf144758ce" path="${client.process.pharma.api.https.path.tms.settled}" config-ref="HTTP_Request_configuration-process-pharma-api">
			<http:headers ><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"client_id": Mule::p('secure::client.process.pharma.api.https.client_id'),
	"client_secret": Mule::p('secure::client.process.pharma.api.https.client_secret')
}&#93;&#93;&#93;></http:headers>
			<http:query-params ><![CDATA[#[output application/json
&#45;&#45;-
{
	"source_system": vars.source_system
}&#93;&#93;&#93;></http:query-params>
		</http:request> [STUDIO] -->
		<process-pharma-api:settled doc:name="Post settled request" doc:id="b5e96ddb-19a4-4a09-969a-0930f72f19e8" config-ref="Process_pharma_api_Config" client-id="#[p('client.process.pharma.api.https.client_id')]" client-secret="#[p('client.process.pharma.api.https.client_secret')]" source-system="#[vars.source_system]"/>
	</sub-flow>
	<sub-flow name="clients-process-pharma-api-tms-load-confirmation" doc:id="1f0db756-352f-4e01-9cae-6169e4f0147e" >
		<logger level="INFO" doc:name="Logger" doc:id="dde8301b-5267-48db-aec5-1f8fd5a286a6" message="#[payload]"/>
		<!-- [STUDIO:"Request"]<http:request method="POST" doc:name="Request" doc:id="db34684b-c5af-4597-b565-952f5c7c497b" config-ref="HTTP_Request_configuration-process-pharma-api" path="${client.process.pharma.api.https.path.tms.load.confirmation}" >
			<http:headers ><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"client_id": Mule::p('secure::client.process.pharma.api.https.client_id'),
	"client_secret": Mule::p('secure::client.process.pharma.api.https.client_secret')
}&#93;&#93;&#93;></http:headers>
			<http:query-params ><![CDATA[#[output application/json
&#45;&#45;-
{
	"source_system": vars.source_system
}&#93;&#93;&#93;></http:query-params>
		</http:request> [STUDIO] -->
		<process-pharma-api:load-confirmation doc:name="Post load confirmation request" doc:id="8262a7ad-480d-4973-a995-d8624b86d94d" config-ref="Process_pharma_api_Config" source-system="#[vars.source_system]" client-id="#[p('client.process.pharma.api.https.client_id')]" client-secret="#[p('client.process.pharma.api.https.client_secret')]"/>
		<logger level="INFO" doc:name="Logger" doc:id="88d85419-50e7-46c6-8520-c8cce27c6ff2" message='#[payload]'/>
	</sub-flow>
	<sub-flow name="clients-process-pharma-api-tms-product-interface" doc:id="2eafeab8-741a-4ffb-818c-50357327506f">
		<try doc:name="Try" doc:id="9a74454e-eedd-4680-b458-f39184133ebf" >
			<!-- [STUDIO:"Request"]<http:request method="POST" doc:name="Request" doc:id="fd64d3d8-48c0-4a33-9c18-3885d9f4f0b5" config-ref="HTTP_Request_configuration-process-pharma-api" path="${client.process.pharma.api.https.path.tms.products}">
			<http:headers><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"client_id": Mule::p('secure::client.process.pharma.api.https.client_id'),
	"client_secret": Mule::p('secure::client.process.pharma.api.https.client_secret')
}&#93;&#93;&#93;></http:headers>
			<http:query-params><![CDATA[#[output application/json
&#45;&#45;-
{
	"source_system": vars.source_system
}&#93;&#93;&#93;></http:query-params>
		</http:request> [STUDIO] -->
			<process-pharma-api:products doc:name="Post products request" doc:id="d5a4d58d-3073-453d-a00c-d98983bf7867" config-ref="Process_pharma_api_Config" source-system="#[vars.source_system]" client-id="#[p('client.process.pharma.api.https.client_id')]" client-secret="#[p('client.process.pharma.api.https.client_secret')]"/>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="91887a96-5e02-400b-988d-a9da1406ea53" >
					<ee:transform doc:name="Set error variables" doc:id="a998a778-aa20-4e04-a92a-9543ffb85323" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="errorMessageTep" ><![CDATA[%dw 2.0
output application/json
---
error]]></ee:set-variable>
							<ee:set-variable variableName="errorCodeTep" ><![CDATA[%dw 2.0
output application/json
---
(if (error.errorMessage.payload.traxion_response.error.user_error_description contains "409") 409 
	else if (error.errorMessage.payload.traxion_response.error.user_error_description contains "404") 404 
	else "")]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<logger level="INFO" doc:name="Visualize error variables" doc:id="cffae235-9d17-4dd2-b1e6-0eaac42510d2" message="Mensaje error Tep: #[vars.errorMessageTep], Código error Tep: #[vars.errorCodeTep]" />
					<raise-error doc:name="Raise error" doc:id="c4e32e4d-a3b8-46fd-b4d0-11d87bb678a1" type="TEP:ERROR" description="CONFLICTO AL ENVIAR LA SOLICITUD"/>
				</on-error-continue>
			</error-handler>
		</try>
	</sub-flow>
	<sub-flow name="clients-process-pharma-api-tms-bill-lading" doc:id="728dc0d7-25ea-4231-aa18-7aa14bd41540" >
		<try doc:name="Try" doc:id="7777bbf5-66dd-4a06-807f-d12bd05125a9" >
			<!-- [STUDIO:"Request"]<http:request method="POST" doc:name="Request" doc:id="e5835754-e561-4c94-b189-358acfe790e8" config-ref="HTTP_Request_configuration-process-pharma-api" path="${client.process.pharma.api.https.path.tms.bill_lading}">
			<http:headers><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"client_id": Mule::p('secure::client.process.pharma.api.https.client_id'),
	"client_secret": Mule::p('secure::client.process.pharma.api.https.client_secret')
}&#93;&#93;&#93;></http:headers>
			<http:query-params><![CDATA[#[output application/json
&#45;&#45;-
{
	"source_system": vars.source_system
}&#93;&#93;&#93;></http:query-params>
		</http:request> [STUDIO] -->
			<process-pharma-api:bill-of-lading doc:name="Post bill of lading request" doc:id="cd94f2ff-4aec-4091-8b4b-0cc6d5942bac" config-ref="Process_pharma_api_Config" source-system="#[vars.source_system]" client-id="#[p('client.process.pharma.api.https.client_id')]" client-secret="#[p('client.process.pharma.api.https.client_secret')]">
				<error-mapping sourceType="PROCESS-PHARMA-API:BAD_REQUEST" targetType="APP:BAD_REQUEST" />
			</process-pharma-api:bill-of-lading>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="6e1be62f-2a43-4fa8-a227-549bf2d5e67a" >
					<choice doc:name="Choice" doc:id="8d6733e9-4490-48d5-8d08-fcca411fc297">
						<when expression='#[error.errorType.asString contains "ERROR:CARTA_PORTE_SERVICE_UNAVAILABLE"]'>
							<raise-error doc:name="Raise error" doc:id="b39c2fcd-af9a-4dcf-9bda-bf9e1a249ce0" type="ERROR:CARTA_PORTE_SERVICE_UNAVAILABLE" description="Error al generar carta porte. El servicio no está disponible." />
						</when>
						<when expression='#[error.errorType.asString contains "APP:BAD_REQUEST"]'>
							<ee:transform doc:name="Set error variable" doc:id="d228fc3e-1fbf-48c6-9658-aeb024969e43">
								<ee:message>
								</ee:message>
								<ee:variables >
									<ee:set-variable variableName="errorMessage" ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Strings
---
error.muleMessage.typedValue]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
							<raise-error doc:name="Raise error" doc:id="74969ca9-9e4b-44c2-bbf5-85fb12966b87" type="ERROR:BAD_REQUEST_CARTA_PORTE" description="HTTP POST on resource 'https://process-pharma-api-test.us-w2.cloudhub.io:443/api/tms/bill_lading' failed: bad request (400)."/>
						</when>
						<otherwise>
							<logger level="INFO" doc:name="Logger" doc:id="23ad172f-8529-4c1d-8fca-49e5e94d6b8f" message="#[error.muleMessage.typedValue]" />
						</otherwise>
					</choice>
				</on-error-propagate>
			</error-handler>
		</try>
	</sub-flow>
	<sub-flow name="clients-process-pharma-api-get-details" doc:id="139d3889-a651-48bc-9fa4-6ac45a6d6b4e" >
		<logger level="INFO" doc:name="Visualize payload" doc:id="37afc62b-8a46-4841-94d2-be853b61a382" message="#[payload]"/>
		<!-- [STUDIO:"Request"]<http:request method="GET" doc:name="Request" doc:id="32c60b32-b719-4cfb-9fb1-2b7ff562fae6" config-ref="HTTP_Request_configuration-process-pharma-api" path="${client.process.pharma.api.https.path.isste.detail}">
			<http:headers ><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"client_id": Mule::p('secure::client.process.pharma.api.https.client_id'),
	"client_secret": Mule::p('secure::client.process.pharma.api.https.client_secret')
}&#93;&#93;&#93;></http:headers>
			<http:query-params ><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"customer_namer": vars.customer_name
}&#93;&#93;&#93;></http:query-params>
		</http:request> [STUDIO] -->
		<process-pharma-api:get-products doc:name="Get products request" doc:id="efbe9de7-2926-42d5-89f1-47c517504e3b" config-ref="Process_pharma_api_Config" customer-namer="#[vars.customer_name]" client-id="#[p('client.process.pharma.api.https.client_id')]" client-secret="#[p('client.process.pharma.api.https.client_secret')]"/>
	</sub-flow>
	<sub-flow name="clients-process-pharma-api-get-detailed" doc:id="3c4925c4-28d9-45cd-8d87-edd23b97d1eb" >
		<logger level="INFO" doc:name="Visualize payload" doc:id="d41ae080-64a5-4c68-9579-b0002563357f" message="#[payload]"/>
		<!-- [STUDIO:"Request"]<http:request method="GET" doc:name="Request" doc:id="4135d0ef-e821-433f-a3de-a9f70a55e183" config-ref="HTTP_Request_configuration-process-pharma-api" path="${client.process.pharma.api.https.path.issste.detailed}">
			<http:headers ><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"client_id": Mule::p('secure::client.process.pharma.api.https.client_id'),
	"client_secret": Mule::p('client.process.pharma.api.https.client_secret')
}&#93;&#93;&#93;></http:headers>
			<http:query-params ><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"customer_name": vars.customer_name
}&#93;&#93;&#93;></http:query-params>
		</http:request> [STUDIO] -->
		<process-pharma-api:orders doc:name="Post orders request" doc:id="08a371c5-137d-40b0-94cf-9496acebb31a" config-ref="Process_pharma_api_Config" client-id="#[p('client.process.pharma.api.https.client_id')]" client-secret="#[p('client.process.pharma.api.https.client_secret')]" customer-name="#[vars.customer_name]"/>
	</sub-flow>
	<sub-flow name="clients-process-pharma-api-call-create-order" doc:id="997cd952-928d-4269-b206-aa67fe163371" >
		<logger level="INFO" doc:name="Logger" doc:id="8369cd7f-c596-4312-a9dd-e9c495f5e211" message="#[payload]"/>
		<process-pharma-api:order-imss doc:name="Post Order IMSS Request" doc:id="6f5b769b-d9be-484c-9da5-7c73adee16f0" config-ref="Process_pharma_api_Config" client-id="#[p('client.process.pharma.api.https.client_id')]" source-system="IMSS" client-secret="#[p('client.process.pharma.api.https.client_secret')]"/>
	</sub-flow>
</mule>
